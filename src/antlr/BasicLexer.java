// Generated from ./BasicLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BasicLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, ASSIGN=2, SEMICOLON=3, COMMA=4, COMMENT=5, NEWPAIR=6, FST=7, SND=8, 
		CALL=9, PAIR=10, BOOL=11, CHAR=12, STRING=13, INT=14, SKIP_=15, READ=16, 
		FREE=17, RETURN=18, EXIT=19, PRINT=20, PRINTLN=21, IF=22, THEN=23, ELSE=24, 
		FI=25, WHILE=26, DO=27, DONE=28, BEGIN=29, END=30, IS=31, PLUS=32, MINUS=33, 
		MULT=34, DIV=35, MOD=36, GT=37, GTE=38, LT=39, LTE=40, EQ=41, NEQ=42, 
		AND=43, OR=44, NOT=45, LEN=46, ORD=47, CHR=48, OPEN_PARENTHESES=49, CLOSE_PARENTHESES=50, 
		OPEN_SQPARENTHESES=51, CLOSE_SQPARENTHESES=52, INTEGER=53, CHARLITER=54, 
		STRINGLITER=55, BOOLLITER=56, PAIRLITER=57, IDENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'"
	};
	public static final String[] ruleNames = {
		"WS", "ASSIGN", "SEMICOLON", "COMMA", "EOL", "COMMENTSYM", "COMMENT", 
		"NEWPAIR", "FST", "SND", "CALL", "PAIR", "BOOL", "CHAR", "STRING", "INT", 
		"SKIP_", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", "IF", "THEN", 
		"ELSE", "FI", "WHILE", "DO", "DONE", "BEGIN", "END", "IS", "PLUS", "MINUS", 
		"MULT", "DIV", "MOD", "GT", "GTE", "LT", "LTE", "EQ", "NEQ", "AND", "OR", 
		"NOT", "LEN", "ORD", "CHR", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_SQPARENTHESES", 
		"CLOSE_SQPARENTHESES", "DIGIT", "INTEGER", "LETTER", "ESCCHAR", "CHARACTER", 
		"CHARLITER", "STRINGLITER", "BOOLLITER", "PAIRLITER", "IDENT"
	};


	public BasicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BasicLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u018b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\6\2\u0085\n\2\r\2\16\2\u0086\3\2\3\2\3\3"+
		"\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\6\b\u0097\n\b\r\b\16\b\u0098"+
		"\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3"+
		"#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,"+
		"\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3"+
		"\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"8\38\39\69\u015b\n9\r9\169\u015c\3:\3:\3;\3;\3<\3<\3<\5<\u0166\n<\3=\3"+
		"=\3=\3=\3>\3>\7>\u016e\n>\f>\16>\u0171\13>\3>\3>\3?\3?\3?\3?\3?\3?\3?"+
		"\3?\3?\5?\u017e\n?\3@\3@\3@\3@\3@\3A\3A\7A\u0187\nA\fA\16A\u018a\13A\3"+
		"\u0098\2B\3\3\5\4\7\5\t\6\13\2\r\2\17\7\21\b\23\t\25\n\27\13\31\f\33\r"+
		"\35\16\37\17!\20#\21%\22\'\23)\24+\25-\26/\27\61\30\63\31\65\32\67\33"+
		"9\34;\35=\36?\37A C!E\"G#I$K%M&O\'Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64"+
		"k\65m\66o\2q\67s\2u\2w\2y8{9}:\177;\u0081<\3\2\b\5\2\13\f\17\17\"\"\4"+
		"\2\f\f\17\17\5\2$$))^^\13\2$$))\62\62^^ddhhppttvv\5\2C\\aac|\6\2\62;C"+
		"\\aac|\u018b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2q\3\2\2\2"+
		"\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\3\u0084"+
		"\3\2\2\2\5\u008a\3\2\2\2\7\u008c\3\2\2\2\t\u008e\3\2\2\2\13\u0090\3\2"+
		"\2\2\r\u0092\3\2\2\2\17\u0094\3\2\2\2\21\u009e\3\2\2\2\23\u00a6\3\2\2"+
		"\2\25\u00aa\3\2\2\2\27\u00ae\3\2\2\2\31\u00b3\3\2\2\2\33\u00b8\3\2\2\2"+
		"\35\u00bd\3\2\2\2\37\u00c2\3\2\2\2!\u00c9\3\2\2\2#\u00cd\3\2\2\2%\u00d2"+
		"\3\2\2\2\'\u00d7\3\2\2\2)\u00dc\3\2\2\2+\u00e3\3\2\2\2-\u00e8\3\2\2\2"+
		"/\u00ee\3\2\2\2\61\u00f6\3\2\2\2\63\u00f9\3\2\2\2\65\u00fe\3\2\2\2\67"+
		"\u0103\3\2\2\29\u0106\3\2\2\2;\u010c\3\2\2\2=\u010f\3\2\2\2?\u0114\3\2"+
		"\2\2A\u011a\3\2\2\2C\u011e\3\2\2\2E\u0121\3\2\2\2G\u0123\3\2\2\2I\u0125"+
		"\3\2\2\2K\u0127\3\2\2\2M\u0129\3\2\2\2O\u012b\3\2\2\2Q\u012d\3\2\2\2S"+
		"\u0130\3\2\2\2U\u0132\3\2\2\2W\u0135\3\2\2\2Y\u0138\3\2\2\2[\u013b\3\2"+
		"\2\2]\u013e\3\2\2\2_\u0141\3\2\2\2a\u0143\3\2\2\2c\u0147\3\2\2\2e\u014b"+
		"\3\2\2\2g\u014f\3\2\2\2i\u0151\3\2\2\2k\u0153\3\2\2\2m\u0155\3\2\2\2o"+
		"\u0157\3\2\2\2q\u015a\3\2\2\2s\u015e\3\2\2\2u\u0160\3\2\2\2w\u0165\3\2"+
		"\2\2y\u0167\3\2\2\2{\u016b\3\2\2\2}\u017d\3\2\2\2\177\u017f\3\2\2\2\u0081"+
		"\u0184\3\2\2\2\u0083\u0085\t\2\2\2\u0084\u0083\3\2\2\2\u0085\u0086\3\2"+
		"\2\2\u0086\u0084\3\2\2\2\u0086\u0087\3\2\2\2\u0087\u0088\3\2\2\2\u0088"+
		"\u0089\b\2\2\2\u0089\4\3\2\2\2\u008a\u008b\7?\2\2\u008b\6\3\2\2\2\u008c"+
		"\u008d\7=\2\2\u008d\b\3\2\2\2\u008e\u008f\7.\2\2\u008f\n\3\2\2\2\u0090"+
		"\u0091\t\3\2\2\u0091\f\3\2\2\2\u0092\u0093\7%\2\2\u0093\16\3\2\2\2\u0094"+
		"\u0096\5\r\7\2\u0095\u0097\13\2\2\2\u0096\u0095\3\2\2\2\u0097\u0098\3"+
		"\2\2\2\u0098\u0099\3\2\2\2\u0098\u0096\3\2\2\2\u0099\u009a\3\2\2\2\u009a"+
		"\u009b\5\13\6\2\u009b\u009c\3\2\2\2\u009c\u009d\b\b\2\2\u009d\20\3\2\2"+
		"\2\u009e\u009f\7p\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7y\2\2\u00a1\u00a2"+
		"\7r\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7t\2\2\u00a5"+
		"\22\3\2\2\2\u00a6\u00a7\7h\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7v\2\2\u00a9"+
		"\24\3\2\2\2\u00aa\u00ab\7u\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7f\2\2\u00ad"+
		"\26\3\2\2\2\u00ae\u00af\7e\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1\7n\2\2\u00b1"+
		"\u00b2\7n\2\2\u00b2\30\3\2\2\2\u00b3\u00b4\7r\2\2\u00b4\u00b5\7c\2\2\u00b5"+
		"\u00b6\7k\2\2\u00b6\u00b7\7t\2\2\u00b7\32\3\2\2\2\u00b8\u00b9\7d\2\2\u00b9"+
		"\u00ba\7q\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7n\2\2\u00bc\34\3\2\2\2\u00bd"+
		"\u00be\7e\2\2\u00be\u00bf\7j\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7t\2\2"+
		"\u00c1\36\3\2\2\2\u00c2\u00c3\7u\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7"+
		"t\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7i\2\2\u00c8 "+
		"\3\2\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7v\2\2\u00cc"+
		"\"\3\2\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf\7m\2\2\u00cf\u00d0\7k\2\2\u00d0"+
		"\u00d1\7r\2\2\u00d1$\3\2\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7g\2\2\u00d4"+
		"\u00d5\7c\2\2\u00d5\u00d6\7f\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7h\2\2\u00d8"+
		"\u00d9\7t\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7g\2\2\u00db(\3\2\2\2\u00dc"+
		"\u00dd\7t\2\2\u00dd\u00de\7g\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7w\2\2"+
		"\u00e0\u00e1\7t\2\2\u00e1\u00e2\7p\2\2\u00e2*\3\2\2\2\u00e3\u00e4\7g\2"+
		"\2\u00e4\u00e5\7z\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7v\2\2\u00e7,\3\2"+
		"\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec"+
		"\7p\2\2\u00ec\u00ed\7v\2\2\u00ed.\3\2\2\2\u00ee\u00ef\7r\2\2\u00ef\u00f0"+
		"\7t\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7v\2\2\u00f3"+
		"\u00f4\7n\2\2\u00f4\u00f5\7p\2\2\u00f5\60\3\2\2\2\u00f6\u00f7\7k\2\2\u00f7"+
		"\u00f8\7h\2\2\u00f8\62\3\2\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7j\2\2\u00fb"+
		"\u00fc\7g\2\2\u00fc\u00fd\7p\2\2\u00fd\64\3\2\2\2\u00fe\u00ff\7g\2\2\u00ff"+
		"\u0100\7n\2\2\u0100\u0101\7u\2\2\u0101\u0102\7g\2\2\u0102\66\3\2\2\2\u0103"+
		"\u0104\7h\2\2\u0104\u0105\7k\2\2\u01058\3\2\2\2\u0106\u0107\7y\2\2\u0107"+
		"\u0108\7j\2\2\u0108\u0109\7k\2\2\u0109\u010a\7n\2\2\u010a\u010b\7g\2\2"+
		"\u010b:\3\2\2\2\u010c\u010d\7f\2\2\u010d\u010e\7q\2\2\u010e<\3\2\2\2\u010f"+
		"\u0110\7f\2\2\u0110\u0111\7q\2\2\u0111\u0112\7p\2\2\u0112\u0113\7g\2\2"+
		"\u0113>\3\2\2\2\u0114\u0115\7d\2\2\u0115\u0116\7g\2\2\u0116\u0117\7i\2"+
		"\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119@\3\2\2\2\u011a\u011b\7"+
		"g\2\2\u011b\u011c\7p\2\2\u011c\u011d\7f\2\2\u011dB\3\2\2\2\u011e\u011f"+
		"\7k\2\2\u011f\u0120\7u\2\2\u0120D\3\2\2\2\u0121\u0122\7-\2\2\u0122F\3"+
		"\2\2\2\u0123\u0124\7/\2\2\u0124H\3\2\2\2\u0125\u0126\7,\2\2\u0126J\3\2"+
		"\2\2\u0127\u0128\7\61\2\2\u0128L\3\2\2\2\u0129\u012a\7\'\2\2\u012aN\3"+
		"\2\2\2\u012b\u012c\7@\2\2\u012cP\3\2\2\2\u012d\u012e\7@\2\2\u012e\u012f"+
		"\7?\2\2\u012fR\3\2\2\2\u0130\u0131\7>\2\2\u0131T\3\2\2\2\u0132\u0133\7"+
		">\2\2\u0133\u0134\7?\2\2\u0134V\3\2\2\2\u0135\u0136\7?\2\2\u0136\u0137"+
		"\7?\2\2\u0137X\3\2\2\2\u0138\u0139\7#\2\2\u0139\u013a\7?\2\2\u013aZ\3"+
		"\2\2\2\u013b\u013c\7(\2\2\u013c\u013d\7(\2\2\u013d\\\3\2\2\2\u013e\u013f"+
		"\7~\2\2\u013f\u0140\7~\2\2\u0140^\3\2\2\2\u0141\u0142\7#\2\2\u0142`\3"+
		"\2\2\2\u0143\u0144\7n\2\2\u0144\u0145\7g\2\2\u0145\u0146\7p\2\2\u0146"+
		"b\3\2\2\2\u0147\u0148\7q\2\2\u0148\u0149\7t\2\2\u0149\u014a\7f\2\2\u014a"+
		"d\3\2\2\2\u014b\u014c\7e\2\2\u014c\u014d\7j\2\2\u014d\u014e\7t\2\2\u014e"+
		"f\3\2\2\2\u014f\u0150\7*\2\2\u0150h\3\2\2\2\u0151\u0152\7+\2\2\u0152j"+
		"\3\2\2\2\u0153\u0154\7]\2\2\u0154l\3\2\2\2\u0155\u0156\7_\2\2\u0156n\3"+
		"\2\2\2\u0157\u0158\4\62;\2\u0158p\3\2\2\2\u0159\u015b\5o8\2\u015a\u0159"+
		"\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d"+
		"r\3\2\2\2\u015e\u015f\n\4\2\2\u015ft\3\2\2\2\u0160\u0161\t\5\2\2\u0161"+
		"v\3\2\2\2\u0162\u0166\5s:\2\u0163\u0164\7^\2\2\u0164\u0166\5u;\2\u0165"+
		"\u0162\3\2\2\2\u0165\u0163\3\2\2\2\u0166x\3\2\2\2\u0167\u0168\7)\2\2\u0168"+
		"\u0169\5w<\2\u0169\u016a\7)\2\2\u016az\3\2\2\2\u016b\u016f\7$\2\2\u016c"+
		"\u016e\5w<\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2\2"+
		"\2\u016f\u0170\3\2\2\2\u0170\u0172\3\2\2\2\u0171\u016f\3\2\2\2\u0172\u0173"+
		"\7$\2\2\u0173|\3\2\2\2\u0174\u0175\7v\2\2\u0175\u0176\7t\2\2\u0176\u0177"+
		"\7w\2\2\u0177\u017e\7g\2\2\u0178\u0179\7h\2\2\u0179\u017a\7c\2\2\u017a"+
		"\u017b\7n\2\2\u017b\u017c\7u\2\2\u017c\u017e\7g\2\2\u017d\u0174\3\2\2"+
		"\2\u017d\u0178\3\2\2\2\u017e~\3\2\2\2\u017f\u0180\7p\2\2\u0180\u0181\7"+
		"w\2\2\u0181\u0182\7n\2\2\u0182\u0183\7n\2\2\u0183\u0080\3\2\2\2\u0184"+
		"\u0188\t\6\2\2\u0185\u0187\t\7\2\2\u0186\u0185\3\2\2\2\u0187\u018a\3\2"+
		"\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u0082\3\2\2\2\u018a"+
		"\u0188\3\2\2\2\n\2\u0086\u0098\u015c\u0165\u016f\u017d\u0188\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
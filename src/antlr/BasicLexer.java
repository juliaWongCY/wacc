// Generated from ./BasicLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BasicLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, ASSIGN=2, SEMICOLON=3, COMMA=4, COMMENTSYM=5, EOL=6, SYMBOLS=7, 
		NEWPAIR=8, FST=9, SND=10, CALL=11, PAIR=12, BOOL=13, CHAR=14, STRING=15, 
		INT=16, SKIP=17, READ=18, FREE=19, RETURN=20, EXIT=21, PRINT=22, PRINTLN=23, 
		IF=24, THEN=25, ELSE=26, FI=27, WHILE=28, DO=29, DONE=30, BEGIN=31, END=32, 
		IS=33, PLUS=34, MINUS=35, MULT=36, DIV=37, MOD=38, GT=39, GTE=40, LT=41, 
		LTE=42, EQ=43, NEQ=44, AND=45, OR=46, NOT=47, NEG=48, LEN=49, ORD=50, 
		CHR=51, OPEN_PARENTHESES=52, CLOSE_PARENTHESES=53, OPEN_SQPARENTHESES=54, 
		CLOSE_SQPARENTHESES=55, INTEGER=56, CHARLITER=57, STRINGLITER=58, BOOLLITER=59, 
		PAIRLITER=60, IDENT=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='"
	};
	public static final String[] ruleNames = {
		"WS", "ASSIGN", "SEMICOLON", "COMMA", "COMMENTSYM", "EOL", "SYMBOLS", 
		"NEWPAIR", "FST", "SND", "CALL", "PAIR", "BOOL", "CHAR", "STRING", "INT", 
		"SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", "IF", "THEN", 
		"ELSE", "FI", "WHILE", "DO", "DONE", "BEGIN", "END", "IS", "PLUS", "MINUS", 
		"MULT", "DIV", "MOD", "GT", "GTE", "LT", "LTE", "EQ", "NEQ", "AND", "OR", 
		"NOT", "NEG", "LEN", "ORD", "CHR", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", 
		"OPEN_SQPARENTHESES", "CLOSE_SQPARENTHESES", "DIGIT", "SIGN", "INTEGER", 
		"LETTER", "ESCCHAR", "CHARLITER", "STRINGLITER", "BOOLLITER", "PAIRLITER", 
		"IDENT"
	};


	public BasicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BasicLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2?\u018a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\6\2\u0087\n\2\r\2\16\2\u0088\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3"+
		"\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3("+
		"\3)\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60"+
		"\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64"+
		"\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\5;\u0159\n;\3;\6;"+
		"\u015c\n;\r;\16;\u015d\3<\3<\3=\3=\3>\3>\3>\3>\3>\5>\u0169\n>\3?\3?\7"+
		"?\u016d\n?\f?\16?\u0170\13?\3?\3?\3@\3@\3@\3@\3@\3@\3@\3@\3@\5@\u017d"+
		"\n@\3A\3A\3A\3A\3A\3B\3B\7B\u0186\nB\fB\16B\u0189\13B\2\2C\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q\2s\2u:w\2"+
		"y\2{;}<\177=\u0081>\u0083?\3\2\t\5\2\13\f\17\17\"\"\4\2\f\f\17\17\4\2"+
		"--//\6\2\"\"C\\aac|\b\2\2\2\n\f\16\17$$))^^\5\2C\\aac|\6\2\62;C\\aac|"+
		"\u018c\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2"+
		"m\3\2\2\2\2o\3\2\2\2\2u\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2"+
		"\u0081\3\2\2\2\2\u0083\3\2\2\2\3\u0086\3\2\2\2\5\u008c\3\2\2\2\7\u008e"+
		"\3\2\2\2\t\u0090\3\2\2\2\13\u0092\3\2\2\2\r\u0094\3\2\2\2\17\u0096\3\2"+
		"\2\2\21\u0098\3\2\2\2\23\u00a0\3\2\2\2\25\u00a4\3\2\2\2\27\u00a8\3\2\2"+
		"\2\31\u00ad\3\2\2\2\33\u00b2\3\2\2\2\35\u00b7\3\2\2\2\37\u00bc\3\2\2\2"+
		"!\u00c3\3\2\2\2#\u00c7\3\2\2\2%\u00cc\3\2\2\2\'\u00d1\3\2\2\2)\u00d6\3"+
		"\2\2\2+\u00dd\3\2\2\2-\u00e2\3\2\2\2/\u00e8\3\2\2\2\61\u00f0\3\2\2\2\63"+
		"\u00f3\3\2\2\2\65\u00f8\3\2\2\2\67\u00fd\3\2\2\29\u0100\3\2\2\2;\u0106"+
		"\3\2\2\2=\u0109\3\2\2\2?\u010e\3\2\2\2A\u0114\3\2\2\2C\u0118\3\2\2\2E"+
		"\u011b\3\2\2\2G\u011d\3\2\2\2I\u011f\3\2\2\2K\u0121\3\2\2\2M\u0123\3\2"+
		"\2\2O\u0125\3\2\2\2Q\u0127\3\2\2\2S\u012a\3\2\2\2U\u012c\3\2\2\2W\u012f"+
		"\3\2\2\2Y\u0132\3\2\2\2[\u0135\3\2\2\2]\u0138\3\2\2\2_\u013b\3\2\2\2a"+
		"\u013d\3\2\2\2c\u013f\3\2\2\2e\u0143\3\2\2\2g\u0147\3\2\2\2i\u014b\3\2"+
		"\2\2k\u014d\3\2\2\2m\u014f\3\2\2\2o\u0151\3\2\2\2q\u0153\3\2\2\2s\u0155"+
		"\3\2\2\2u\u0158\3\2\2\2w\u015f\3\2\2\2y\u0161\3\2\2\2{\u0168\3\2\2\2}"+
		"\u016a\3\2\2\2\177\u017c\3\2\2\2\u0081\u017e\3\2\2\2\u0083\u0183\3\2\2"+
		"\2\u0085\u0087\t\2\2\2\u0086\u0085\3\2\2\2\u0087\u0088\3\2\2\2\u0088\u0086"+
		"\3\2\2\2\u0088\u0089\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u008b\b\2\2\2\u008b"+
		"\4\3\2\2\2\u008c\u008d\7?\2\2\u008d\6\3\2\2\2\u008e\u008f\7=\2\2\u008f"+
		"\b\3\2\2\2\u0090\u0091\7.\2\2\u0091\n\3\2\2\2\u0092\u0093\7%\2\2\u0093"+
		"\f\3\2\2\2\u0094\u0095\t\3\2\2\u0095\16\3\2\2\2\u0096\u0097\13\2\2\2\u0097"+
		"\20\3\2\2\2\u0098\u0099\7p\2\2\u0099\u009a\7g\2\2\u009a\u009b\7y\2\2\u009b"+
		"\u009c\7r\2\2\u009c\u009d\7c\2\2\u009d\u009e\7k\2\2\u009e\u009f\7t\2\2"+
		"\u009f\22\3\2\2\2\u00a0\u00a1\7h\2\2\u00a1\u00a2\7u\2\2\u00a2\u00a3\7"+
		"v\2\2\u00a3\24\3\2\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7p\2\2\u00a6\u00a7"+
		"\7f\2\2\u00a7\26\3\2\2\2\u00a8\u00a9\7e\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab"+
		"\7n\2\2\u00ab\u00ac\7n\2\2\u00ac\30\3\2\2\2\u00ad\u00ae\7r\2\2\u00ae\u00af"+
		"\7c\2\2\u00af\u00b0\7k\2\2\u00b0\u00b1\7t\2\2\u00b1\32\3\2\2\2\u00b2\u00b3"+
		"\7d\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7q\2\2\u00b5\u00b6\7n\2\2\u00b6"+
		"\34\3\2\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7j\2\2\u00b9\u00ba\7c\2\2\u00ba"+
		"\u00bb\7t\2\2\u00bb\36\3\2\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7v\2\2\u00be"+
		"\u00bf\7t\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7i\2\2"+
		"\u00c2 \3\2\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7v\2"+
		"\2\u00c6\"\3\2\2\2\u00c7\u00c8\7u\2\2\u00c8\u00c9\7m\2\2\u00c9\u00ca\7"+
		"k\2\2\u00ca\u00cb\7r\2\2\u00cb$\3\2\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce"+
		"\7g\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7f\2\2\u00d0&\3\2\2\2\u00d1\u00d2"+
		"\7h\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7g\2\2\u00d5"+
		"(\3\2\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7v\2\2\u00d9"+
		"\u00da\7w\2\2\u00da\u00db\7t\2\2\u00db\u00dc\7p\2\2\u00dc*\3\2\2\2\u00dd"+
		"\u00de\7g\2\2\u00de\u00df\7z\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7v\2\2"+
		"\u00e1,\3\2\2\2\u00e2\u00e3\7r\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7k\2"+
		"\2\u00e5\u00e6\7p\2\2\u00e6\u00e7\7v\2\2\u00e7.\3\2\2\2\u00e8\u00e9\7"+
		"r\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed"+
		"\7v\2\2\u00ed\u00ee\7n\2\2\u00ee\u00ef\7p\2\2\u00ef\60\3\2\2\2\u00f0\u00f1"+
		"\7k\2\2\u00f1\u00f2\7h\2\2\u00f2\62\3\2\2\2\u00f3\u00f4\7v\2\2\u00f4\u00f5"+
		"\7j\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7\7p\2\2\u00f7\64\3\2\2\2\u00f8\u00f9"+
		"\7g\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7g\2\2\u00fc"+
		"\66\3\2\2\2\u00fd\u00fe\7h\2\2\u00fe\u00ff\7k\2\2\u00ff8\3\2\2\2\u0100"+
		"\u0101\7y\2\2\u0101\u0102\7j\2\2\u0102\u0103\7k\2\2\u0103\u0104\7n\2\2"+
		"\u0104\u0105\7g\2\2\u0105:\3\2\2\2\u0106\u0107\7f\2\2\u0107\u0108\7q\2"+
		"\2\u0108<\3\2\2\2\u0109\u010a\7f\2\2\u010a\u010b\7q\2\2\u010b\u010c\7"+
		"p\2\2\u010c\u010d\7g\2\2\u010d>\3\2\2\2\u010e\u010f\7d\2\2\u010f\u0110"+
		"\7g\2\2\u0110\u0111\7i\2\2\u0111\u0112\7k\2\2\u0112\u0113\7p\2\2\u0113"+
		"@\3\2\2\2\u0114\u0115\7g\2\2\u0115\u0116\7p\2\2\u0116\u0117\7f\2\2\u0117"+
		"B\3\2\2\2\u0118\u0119\7k\2\2\u0119\u011a\7u\2\2\u011aD\3\2\2\2\u011b\u011c"+
		"\7-\2\2\u011cF\3\2\2\2\u011d\u011e\7/\2\2\u011eH\3\2\2\2\u011f\u0120\7"+
		",\2\2\u0120J\3\2\2\2\u0121\u0122\7\61\2\2\u0122L\3\2\2\2\u0123\u0124\7"+
		"\'\2\2\u0124N\3\2\2\2\u0125\u0126\7@\2\2\u0126P\3\2\2\2\u0127\u0128\7"+
		"@\2\2\u0128\u0129\7?\2\2\u0129R\3\2\2\2\u012a\u012b\7>\2\2\u012bT\3\2"+
		"\2\2\u012c\u012d\7>\2\2\u012d\u012e\7?\2\2\u012eV\3\2\2\2\u012f\u0130"+
		"\7?\2\2\u0130\u0131\7?\2\2\u0131X\3\2\2\2\u0132\u0133\7#\2\2\u0133\u0134"+
		"\7?\2\2\u0134Z\3\2\2\2\u0135\u0136\7(\2\2\u0136\u0137\7(\2\2\u0137\\\3"+
		"\2\2\2\u0138\u0139\7~\2\2\u0139\u013a\7~\2\2\u013a^\3\2\2\2\u013b\u013c"+
		"\7#\2\2\u013c`\3\2\2\2\u013d\u013e\7/\2\2\u013eb\3\2\2\2\u013f\u0140\7"+
		"n\2\2\u0140\u0141\7g\2\2\u0141\u0142\7p\2\2\u0142d\3\2\2\2\u0143\u0144"+
		"\7q\2\2\u0144\u0145\7t\2\2\u0145\u0146\7f\2\2\u0146f\3\2\2\2\u0147\u0148"+
		"\7e\2\2\u0148\u0149\7j\2\2\u0149\u014a\7t\2\2\u014ah\3\2\2\2\u014b\u014c"+
		"\7*\2\2\u014cj\3\2\2\2\u014d\u014e\7+\2\2\u014el\3\2\2\2\u014f\u0150\7"+
		"]\2\2\u0150n\3\2\2\2\u0151\u0152\7_\2\2\u0152p\3\2\2\2\u0153\u0154\4\62"+
		";\2\u0154r\3\2\2\2\u0155\u0156\t\4\2\2\u0156t\3\2\2\2\u0157\u0159\5s:"+
		"\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015b\3\2\2\2\u015a\u015c"+
		"\5q9\2\u015b\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015b\3\2\2\2\u015d"+
		"\u015e\3\2\2\2\u015ev\3\2\2\2\u015f\u0160\t\5\2\2\u0160x\3\2\2\2\u0161"+
		"\u0162\t\6\2\2\u0162z\3\2\2\2\u0163\u0164\7)\2\2\u0164\u0165\5w<\2\u0165"+
		"\u0166\7)\2\2\u0166\u0169\3\2\2\2\u0167\u0169\5y=\2\u0168\u0163\3\2\2"+
		"\2\u0168\u0167\3\2\2\2\u0169|\3\2\2\2\u016a\u016e\7$\2\2\u016b\u016d\5"+
		"w<\2\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016e"+
		"\u016f\3\2\2\2\u016f\u0171\3\2\2\2\u0170\u016e\3\2\2\2\u0171\u0172\7$"+
		"\2\2\u0172~\3\2\2\2\u0173\u0174\7v\2\2\u0174\u0175\7t\2\2\u0175\u0176"+
		"\7w\2\2\u0176\u017d\7g\2\2\u0177\u0178\7h\2\2\u0178\u0179\7c\2\2\u0179"+
		"\u017a\7n\2\2\u017a\u017b\7u\2\2\u017b\u017d\7g\2\2\u017c\u0173\3\2\2"+
		"\2\u017c\u0177\3\2\2\2\u017d\u0080\3\2\2\2\u017e\u017f\7p\2\2\u017f\u0180"+
		"\7w\2\2\u0180\u0181\7n\2\2\u0181\u0182\7n\2\2\u0182\u0082\3\2\2\2\u0183"+
		"\u0187\t\7\2\2\u0184\u0186\t\b\2\2\u0185\u0184\3\2\2\2\u0186\u0189\3\2"+
		"\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0084\3\2\2\2\u0189"+
		"\u0187\3\2\2\2\n\2\u0088\u0158\u015d\u0168\u016e\u017c\u0187\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}